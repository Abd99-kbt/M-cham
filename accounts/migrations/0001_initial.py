# Generated by Django 4.2.7 on 2025-07-30 14:43

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('employee_id', models.CharField(max_length=10, unique=True, validators=[django.core.validators.RegexValidator('^\\d{1,10}$', 'رقم الموظف يجب أن يكون أرقام فقط')], verbose_name='رقم الموظف')),
                ('arabic_name', models.CharField(max_length=100, verbose_name='الاسم بالعربية')),
                ('phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$', 'رقم الهاتف غير صحيح')], verbose_name='رقم الهاتف')),
                ('is_active_session', models.BooleanField(default=False, verbose_name='جلسة نشطة')),
                ('last_activity', models.DateTimeField(blank=True, null=True, verbose_name='آخر نشاط')),
                ('failed_login_attempts', models.IntegerField(default=0, verbose_name='محاولات الدخول الفاشلة')),
                ('account_locked_until', models.DateTimeField(blank=True, null=True, verbose_name='مقفل حتى')),
                ('require_password_change', models.BooleanField(default=True, verbose_name='يتطلب تغيير كلمة المرور')),
                ('two_factor_enabled', models.BooleanField(default=False, verbose_name='المصادقة الثنائية مفعلة')),
                ('two_factor_secret', models.CharField(blank=True, max_length=32, verbose_name='مفتاح المصادقة الثنائية')),
                ('can_send_confidential', models.BooleanField(default=False, verbose_name='يمكن إرسال رسائل سرية')),
                ('can_send_urgent', models.BooleanField(default=False, verbose_name='يمكن إرسال رسائل عاجلة')),
                ('delegation_start_date', models.DateTimeField(blank=True, null=True, verbose_name='بداية التفويض')),
                ('delegation_end_date', models.DateTimeField(blank=True, null=True, verbose_name='نهاية التفويض')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('delegate_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='delegated_from', to=settings.AUTH_USER_MODEL, verbose_name='مفوض إلى')),
            ],
            options={
                'verbose_name': 'المستخدم',
                'verbose_name_plural': 'المستخدمون',
                'ordering': ['department', 'position__level', 'arabic_name'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='اسم القسم')),
                ('code', models.CharField(max_length=10, unique=True, verbose_name='رمز القسم')),
                ('description', models.TextField(blank=True, verbose_name='الوصف')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_departments', to=settings.AUTH_USER_MODEL, verbose_name='مدير القسم')),
                ('parent_department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.department', verbose_name='القسم الأعلى')),
            ],
            options={
                'verbose_name': 'القسم',
                'verbose_name_plural': 'الأقسام',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='اسم المجموعة')),
                ('description', models.TextField(blank=True, verbose_name='الوصف')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_groups', to=settings.AUTH_USER_MODEL, verbose_name='منشئ المجموعة')),
                ('members', models.ManyToManyField(related_name='user_groups', to=settings.AUTH_USER_MODEL, verbose_name='الأعضاء')),
            ],
            options={
                'verbose_name': 'مجموعة المستخدمين',
                'verbose_name_plural': 'مجموعات المستخدمين',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='المسمى الوظيفي')),
                ('level', models.IntegerField(choices=[(1, 'موظف'), (2, 'مشرف'), (3, 'رئيس قسم'), (4, 'مدير'), (5, 'مدير عام'), (6, 'نائب المدير العام'), (7, 'المدير العام')], verbose_name='المستوى الوظيفي')),
                ('permissions_level', models.IntegerField(default=1, verbose_name='مستوى الصلاحيات')),
                ('can_approve_messages', models.BooleanField(default=False, verbose_name='يمكن الموافقة على الرسائل')),
                ('max_approval_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='أقصى مبلغ للموافقة')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.department', verbose_name='القسم')),
            ],
            options={
                'verbose_name': 'المنصب',
                'verbose_name_plural': 'المناصب',
                'ordering': ['-level', 'title'],
            },
        ),
        migrations.AddField(
            model_name='user',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounts.department', verbose_name='القسم'),
        ),
        migrations.AddField(
            model_name='user',
            name='direct_manager',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='المدير المباشر'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='position',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounts.position', verbose_name='المنصب'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
